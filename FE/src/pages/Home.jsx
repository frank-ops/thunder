import React,{useState,useEffect} from 'react'
import  {
    Card,
    FormField,
    Loader    
} from '../components'
const RenderCards = ({data,title})=>{
    if(data?.length>0){
        return data.map((post)=><Card key={post._id} {...post}/>)
    }
    return(
        <h2 className='mt-2 font-bold text-[#6449ff] text-xl uppercase'>
          {title}
        </h2>
    )
}
const Home = () => {
    const [loading,setLoading]=useState(false);
    const [posts,setPosts]=useState(null)
    const [search,setSearch]=useState("")
    const [searchRes,setSearchRes]=useState(null)
    const [searchT,setSearchT]=useState(null)
    useEffect(()=>{
        const fetchPosts=async ()=>{
            setLoading(true);
            try{
                const  res= await fetch('https://thunderai.onrender.com/api/v1/post',{
                    method:'GET',
                    headers: {
                        "Content-Type" : "application/json",
                    },
                })
                if(res.ok){
                    const result =await res.json(); 
                    setPosts(result.data.reverse());
                }
            }
            catch{
                   alert("error in sharing");
            }
            finally{
                  setLoading(false)
            }
        }
        fetchPosts()
    },[])


    const handlesearch = (e) =>{
         setSearch(e.target.value)

        setSearchT( setTimeout(()=>{
            const searchres= posts.filter((item)=>item.name.toLowerCase().includes(search.toLowerCase()) || item.prompt.toLowerCase().includes(search.toLowerCase()))
            setSearchRes(searchres) ;
          },500))
    }


    return (
    <section className='max-w-7xl mx-auto'>
        <>
            <h1 className='font-extrabold text-[#222328] text-[32px]'>
                The Community Showcase
            </h1>
            <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>Here you can get the visually appealing  and stunning images generated by AI</p>
        </>
        <div className='mt-16'>
           <FormField
            labelname="search Images"
            type="text"
            name="text"
            placeholder="search"
            value={search}
            handlechange={handlesearch}
           />
        </div>
        <div className='mt-10'>
            {
                loading?
                <div className='flex justify-center items-center'>
                   <Loader/>
                </div>
                :
                <>
                    {
                        search && (
                            <h2 className='font-medium text-[#66e75] text-xl mb-3'>
                                Showing results for <span className='text-[#222328]'>{search}</span> 
                            </h2>
                        )
                    }
                    <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                            {
                                search ? (
                                    <RenderCards
                                       data={searchRes}
                                       title="no search results "/>
                                ):(
                                    <RenderCards
                                    data={posts}
                                    title="no post are there "
                                    />
                                )
                            }
                    </div>
                </>
            }
        </div>
        
    </section>
    
  )
}

export default Home